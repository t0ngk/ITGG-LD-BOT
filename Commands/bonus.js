module.exports = async (Discord, interaction, axios, { get_role }) => {
  if (get_role(interaction)) {
    const get_point = interaction.options.getInteger("point");
    const get_topic = interaction.options.getString("topic");
    const get_countdown = interaction.options.getInteger("countdown");
    await interaction.reply("‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß ‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏á‡∏á‡∏á‡∏á‡∏á");
    await interaction.deleteReply();
    let mess = await interaction.channel.send(
      `‚è≤Ô∏èüî• ‡πÅ‡∏à‡∏Å ${get_point} Token ‡πÄ‡∏õ‡πá‡∏ô ‡πÄ‡∏ß‡∏•‡∏≤ ${get_countdown} ‡∏ß‡∏¥ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ __**${get_topic}**__ ‡∏Å‡∏î‡πÄ‡∏•‡∏¢!!!!! ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏°‡∏î‡πÄ‡∏•‡∏¢ ‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡πÉ‡∏à‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á üî•‚è≤Ô∏è`
    );
    mess.react("üìå");
    const filter = (reaction, user) => {
      return (
        reaction.emoji.name === "üìå" &&
        user.bot == false &&
        reaction.message.id == mess.id
      );
    };
    const collector = mess.createReactionCollector({
      filter,
      time: get_countdown * 1000,
    });

    collector.on("end", async (collected) => {
      let all_user = [];
      collected.map((info) => {
        info.users.cache.some((user) => {
          interaction.guild.members.cache.some((get_user) => {
            if (get_user.id == user.id && !user.bot) {
              all_user.push({
                discord_id: user.id,
                coin: get_point,
                event: get_topic,
                giver: interaction.member.displayName,
              });
            }
          });
        });
      });
      await axios
        .post("https://itgg.herokuapp.com/discord/coins", all_user)
        .then((done) => {
          mess.reactions.removeAll();
          mess.edit(
            `~~‚è≤Ô∏èüî• ‡πÅ‡∏à‡∏Å ${get_point} Token ‡πÄ‡∏õ‡πá‡∏ô ‡πÄ‡∏ß‡∏•‡∏≤ ${get_countdown} ‡∏ß‡∏¥ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ __**${get_topic}**__ ‡∏Å‡∏î‡πÄ‡∏•‡∏¢!!!!! ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏°‡∏î‡πÄ‡∏•‡∏¢ ‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡πÉ‡∏à‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á üî•‚è≤Ô∏è~~  ‚ö†Ô∏è‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡∏Å‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß‚ö†Ô∏è`
          );
          done.data.fail.forEach((user) => {
            interaction.channel.send(
              `üõë  <@${user}> ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß(__**/auth**__) ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏µ‡∏ö‡πÅ‡∏à‡πâ‡∏á GG Admin ‡πÇ‡∏î‡∏¢‡∏î‡πà‡∏ß‡∏ô  üõë`
            );
          });
        })
        .catch((err) => {
          interaction.channel.send(
            "‚ö†Ô∏è ‡∏°‡∏µ‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∏‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å GG-Admin ‡∏°‡∏≤‡∏î‡∏π ‚ö†Ô∏è"
          );
        });
    });
  } else {
    interaction.reply("üó®Ô∏èü§ñ : ‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏≠‡∏Å‡∏≠‡∏¥‡∏≠‡∏¥");
  }
};
