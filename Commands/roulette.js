module.exports = async (Discord, interaction, axios, { get_role }) => {
  if (get_role(interaction)) {
    await interaction.reply("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡πÇ‡∏ï‡πä‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Roulette");
    let mess = await interaction.channel.send(
      "‡∏Ñ‡∏¥‡∏î Text ‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å‡πÉ‡∏Ñ‡∏£‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏Ñ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πà‡∏≠‡∏¢"
    );
    const get_countdown = interaction.options.getInteger("countdown");
    const get_point = interaction.options.getInteger("point");
    mess.react("üîµ");
    mess.react("üî¥");
    mess.react("üü¢");
    let all = [];
    const roulette_filter = (reaction, user) => {
      return user.bot == false && reaction.message.id == mess.id;
    };
    const roulette_collector = mess.createReactionCollector({
      roulette_filter,
      time: get_countdown * 1000,
    });

    roulette_collector.on("end", async (collected) => {
      let mutipie = {
        blue: -1,
        red: -1,
        green: -1,
      };
      let rng = Math.floor(Math.random() * 100);
      if (rng > 0 && rng <= 45) {
        interaction.channel.send("Blue Win");
        mutipie.blue = 1;
      } else if (rng > 45 && rng <= 90) {
        interaction.channel.send("Red Win");
        mutipie.red = 1;
      } else if (rng < 90) {
        interaction.channel.send("Green Win");
        mutipie.green = 2;
      }
      let winner = 0;
      collected.map((user) => {
        user.users.cache.some((user_info) => {
          if (!user_info.bot) {
            interaction.guild.members.cache.some((get_id) => {
              if (get_id.id == user_info.id) {
                if (user.emoji.name === "üîµ") {
                  all.push({
                    id: get_id.id,
                    coin: get_point * mutipie.blue,
                  });
                  winner += 1;
                }
                if (user.emoji.name === "üî¥") {
                  all.push({
                    id: get_id.id,
                    coin: get_point * mutipie.red,
                  });
                  winner += 1;
                }
                if (user.emoji.name === "üü¢") {
                  all.push({
                    id: get_id.id,
                    coin: get_point * mutipie.green,
                  });
                  winner += 1;
                }
              }
            });
          }
        });
      });
      mess.reactions.removeAll();
      await axios
        .post("/discord/gateCoin", all)
        .then((done) => {
          interaction.channel.send(`‡∏ú‡∏π‡πâ‡∏ä‡∏ô‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${winner} ‡∏Ñ‡∏ô`);
          done.data.fail.forEach((user) => {
            interaction.channel.send(
              `üõë  <@${user}> ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß(__**/auth**__) ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏µ‡∏ö‡πÅ‡∏à‡πâ‡∏á GG Admin ‡πÇ‡∏î‡∏¢‡∏î‡πà‡∏ß‡∏ô  üõë`
            );
          });
        })
        .catch(() => {
          interaction.channel.send(
            "‚ö†Ô∏è ‡∏°‡∏µ‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∏‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å GG-Admin ‡∏°‡∏≤‡∏î‡∏π ‚ö†Ô∏è"
          );
        });
    });
  } else {
    interaction.reply("üó®Ô∏èü§ñ : ‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏≠‡∏Å‡∏≠‡∏¥‡∏≠‡∏¥");
  }
};
